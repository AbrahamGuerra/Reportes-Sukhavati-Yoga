services:
  postgres:
    image: postgres:16-alpine
    container_name: local-postgres
    restart: always
    environment:
      POSTGRES_DB: sukhavati_yoga
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppass
    ports:
      - "5432:5432"           
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER:-appuser} -d ${PGDATABASE:-appdb} -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
  api:
    build: .
    env_file: .env
    restart: always
    environment:
      - PORT=3000
    expose:
      - "3000"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:${PORT:-3000}/api/health >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy

  caddy:
    image: caddy:2
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./public:/srv/public:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      api:
        condition: service_healthy

volumes:
  pg_data:
  caddy_data:
  caddy_config:
